;;; jupyter-ascending-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:



;;; Generated autoloads from jupyter-ascending.el

(autoload 'jupyter-ascending-start-notebook "jupyter-ascending" "\
Start a Jupyter notebook for the current file.
Assumes the notebook has the same name as the current file but
with .ipynb extension." t)
(autoload 'jupyter-ascending-create-notebook-pair "jupyter-ascending" "\
Create a synced pair of Jupyter notebook files using jupyter_ascending.
With BASE-NAME as the file prefix (without
extension), creates .sync.py and .sync.ipynb files.

(fn BASE-NAME)" t)
(autoload 'jupyter-ascending-convert-notebook "jupyter-ascending" "\
Convert an existing Jupyter notebook to a synced pair with jupytext.
Renames both files with .sync infix." t)
(autoload 'jupyter-ascending-mode "jupyter-ascending" "\
Minor mode for editing Jupyter notebooks with jupyter_ascending.

\\{jupyter-ascending-mode-map}

This is a minor mode.  If called interactively, toggle the
`Jupyter-Ascending mode' mode.  If the prefix argument is
positive, enable the mode, and if it is zero or negative, disable
the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `jupyter-ascending-mode'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(register-definition-prefixes "jupyter-ascending" '("jupyter-ascending-"))

;;; End of scraped data

(provide 'jupyter-ascending-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; jupyter-ascending-autoloads.el ends here
